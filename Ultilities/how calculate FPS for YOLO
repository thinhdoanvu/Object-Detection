import time
from ultralytics import YOLO
import cv2

# Load the model
model = YOLO('runs/detect/v12L_ip102_66.1/weights/best.pt')  # e.g., yolov8n.pt or a custom weight

# Load an image
img = cv2.imread('../../datasets/IP102/test/IP000000002.jpg')

# Warm up
model.predict(img)

# Measure inference time
start_time = time.time()

# Inference on single image
for _ in range(100):  # Run multiple times for better average
    model.predict(img, verbose=False)

end_time = time.time()

# Calculate average time per inference
avg_time = (end_time - start_time) / 100
fps = 1 / avg_time

print(f"Inference Time per Frame: {avg_time:.4f} seconds")
print(f"FPS: {fps:.2f}")

'''
C:\Users\csipl\anaconda3\envs\yolo12\python.exe F:\users\thanh\ntu_group\thinh\ObjectDetection\yolov12\ultralytics\fps.py 
0: 480x640 2 rice leaf rollers, 59.3ms
Speed: 6.6ms preprocess, 59.3ms inference, 138.3ms postprocess per image at shape (1, 3, 480, 640)
Inference Time per Frame: 0.0165 seconds
FPS: 60.72
'''
Process finished with exit code 0
